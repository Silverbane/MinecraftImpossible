#    - '      @IF b $<playername>.PostBoolFL = true'
#   - '      @AND b $<playername>.PostBoolBL = true'
#  - '         @SETINT $<playername>.LoopCount 11'
#    - '      @ENDIF'# Known bugs:
# - blocks that do not fall in vanilla minecraft do not fall when blocks are mined
# - FailReason should be a team variable, not player, so that it can be pinged by the team in the Mine Hub command block
# Brainstorming and Notes
# Grabbed Barracks file and copied it over for now as a template.
# This building will hire an NPC who will perform a script that will slowly build a mineshaft in the direction that the building as placed.
# MiningI Unlocks Coal and Cobblestone Collection.
# MiningII Unlocks Iron
# MiningIII Unlocks Everything else and allows for a decline/elevators.
# How it Works:
# You supply the building with a villager and money and tools + build blocks such as rails and railcarts wood torches.
# It will then begin mining. If it finds stone it breaks it to cobblestone.
# If it finds a resource it will mine it with a chance to get bonus.
# Either have a rail system pick up the blocks or... run a script that just places the blocks into a chest.
Scripts:
  Help:
    Script:
    - '@PLAYER Opened Mine Help.'
    - '@PLAYER &4 UNDER CONSTRUCTION'
    - '@PLAYER Closed Mine Help.'
  MinerControlHelp:
    Script:
    - '@PLAYER Menu Help for Miner Control. UNDER CONSTRUCTION'
    - '@PLAYER Commands are accessible through the menu but also can be typed. See http://wiki.citizensnpcs.co/Commands and http://wiki.citizensnpcs.co/Sentry#Commands . This is useful for setting hotkeys instead of using the menu system.'
  Ledger:
    Script:
#    - '@SETSTR $<worldname>.<playername>ActivePlans Mine'
    - '@SETSTR $<worldname>.<playername>CurrentTown $<playername>.SMTeam'
#    - '@ADDINT $<worldname>.<var:$<playername>.SMTeam>PopLimit 6'
    - '@PLAYER &8LOG Calling Shared:BuildingLedger'
    - '@CALL Shared:BuildingLedger'
  Menu:
    Script:
    - '@SETSTR $<worldname>.<playername>CheckType Y-1Check'
    - '@CALL Shared:BuildingID'
    - '@IF b $<worldname>.<playername>NoOwner = True'
    - '@AND b $<worldname>.<var:$<playername>.SMTeam>Building != True'
#    - ' @SETBOOL $<worldname>.<var:$<playername>.SMTeam>Building False' 
#    - ' @SETSTR $<worldname>.<playername>ActivePlans Mine'
    - ' @SETSTR $<worldname>.<playername>CurrentTown $<playername>.SMTeam'
    - ' @CALL Shared:BuildingLedger'
    - '@ENDIF'
    - '@IF b $<worldname>.<playername>AllowedUse = True'
    - ' @PLAYER Opening Mine Menu'
    - ' @OPENINV Mine'
    - '@ENDIF'
  IEvent:
    Script:
    - '@IF s <inventorytitle> ?= Mine'
    - ' @SWITCH i <clickedslot>'
    - '   @CASE 0'
    - '     @CALL Mine:Help'
    - '   @CASE 1'
    - '     @SETSTR $<worldname>.<playername>CitizenSelected <var:$<playername>.SMTeam>1'
    - '     @IF b $<worldname>.<var:$<playername>.SMTeam>1Built != True'
    - '         @SETSTR $<worldname>.<playername>CitizenSelectType New'
    - '         @SETSTR $<worldname>.<playername>CitizenTeamID $<playername>.SMTeam'
    - '         @ADDSTR $<worldname>.<playername>CitizenTeamID 1'
    - '         @PLAYER <var:$<playername>.SMTeam> 1 new citizen selected.'
    - '     @ELSE'
    - '       @IF b $<worldname>.<var:$<playername>.SMTeam>1Dead = True'
    - '         @SETSTR $<worldname>.<playername>CitizenSelectType Dead'
    - '         @SETSTR $<worldname>.<playername>CitizenTeamID $<playername>.SMTeam'
    - '         @ADDSTR $<worldname>.<playername>CitizenTeamID 1'
    - '         @PLAYER <var:$<playername>.SMTeam> 1 respawn selected.'
    - '       @ELSE'
    - '         @SETSTR $<worldname>.<playername>CitizenSelectType Taken'
    - '         @PLAYER <var:$<playername>.SMTeam> 1 slot has already been taken.'
    - '       @ENDIF'
    - '     @ENDIF'
    - '   @CASE 2'
    - '     @SETSTR $<worldname>.<playername>CitizenSelected <var:$<playername>.SMTeam>2'
    - '     @IF b $<worldname>.<var:$<playername>.SMTeam>2Built != True'
    - '         @SETSTR $<worldname>.<playername>CitizenSelectType New'
    - '         @SETSTR $<worldname>.<playername>CitizenTeamID $<playername>.SMTeam'
    - '         @ADDSTR $<worldname>.<playername>CitizenTeamID 2'
    - '         @PLAYER <var:$<playername>.SMTeam> 2 new citizen selected.'
    - '     @ELSE'
    - '       @IF b $<worldname>.<var:$<playername>.SMTeam>2Dead = True'
    - '         @SETSTR $<worldname>.<playername>CitizenSelectType Dead'
    - '         @SETSTR $<worldname>.<playername>CitizenTeamID $<playername>.SMTeam'
    - '         @ADDSTR $<worldname>.<playername>CitizenTeamID 2'
    - '         @PLAYER <var:$<playername>.SMTeam> 2 respawn selected.'
    - '       @ELSE'
    - '         @SETSTR $<worldname>.<playername>CitizenSelectType Taken'
    - '         @PLAYER <var:$<playername>.SMTeam> 2 slot has already been taken.'
    - '       @ENDIF'
    - '     @ENDIF'
    - '   @CASE 3'
    - '     @SETSTR $<worldname>.<playername>CitizenSelected <var:$<playername>.SMTeam>3'
    - '     @IF b $<worldname>.<var:$<playername>.SMTeam>3Built != True'
    - '         @SETSTR $<worldname>.<playername>CitizenSelectType New'
    - '         @SETSTR $<worldname>.<playername>CitizenTeamID $<playername>.SMTeam'
    - '         @ADDSTR $<worldname>.<playername>CitizenTeamID 3'
    - '         @PLAYER <var:$<playername>.SMTeam> 3 new citizen selected.'
    - '     @ELSE'
    - '       @IF b $<worldname>.<var:$<playername>.SMTeam>3Dead = True'
    - '         @SETSTR $<worldname>.<playername>CitizenSelectType Dead'
    - '         @SETSTR $<worldname>.<playername>CitizenTeamID $<playername>.SMTeam'
    - '         @ADDSTR $<worldname>.<playername>CitizenTeamID 3'
    - '         @PLAYER <var:$<playername>.SMTeam> 3 respawn selected.'
    - '       @ELSE'
    - '         @SETSTR $<worldname>.<playername>CitizenSelectType Taken'
    - '         @PLAYER <var:$<playername>.SMTeam> 3 slot has already been taken.'
    - '       @ENDIF'
    - '     @ENDIF'
    - '   @CASE 4'
    - '     @SETSTR $<worldname>.<playername>CitizenSelected <var:$<playername>.SMTeam>4'
    - '     @IF b $<worldname>.<var:$<playername>.SMTeam>4Built != True'
    - '         @SETSTR $<worldname>.<playername>CitizenSelectType New'
    - '         @SETSTR $<worldname>.<playername>CitizenTeamID $<playername>.SMTeam'
    - '         @ADDSTR $<worldname>.<playername>CitizenTeamID 4'
    - '         @PLAYER <var:$<playername>.SMTeam> 4 new citizen selected.'
    - '     @ELSE'
    - '       @IF b $<worldname>.<var:$<playername>.SMTeam>4Dead = True'
    - '         @SETSTR $<worldname>.<playername>CitizenSelectType Dead'
    - '         @SETSTR $<worldname>.<playername>CitizenTeamID $<playername>.SMTeam'
    - '         @ADDSTR $<worldname>.<playername>CitizenTeamID 4'
    - '         @PLAYER <var:$<playername>.SMTeam> 4 respawn selected.'
    - '       @ELSE'
    - '         @SETSTR $<worldname>.<playername>CitizenSelectType Taken'
    - '         @PLAYER <var:$<playername>.SMTeam> 4 slot has already been taken.'
    - '       @ENDIF'
    - '     @ENDIF'
    - '   @CASE 5'
    - '     @SETSTR $<worldname>.<playername>CitizenSelected <var:$<playername>.SMTeam>5'
    - '     @IF b $<worldname>.<var:$<playername>.SMTeam>5Built != True'
    - '         @SETSTR $<worldname>.<playername>CitizenSelectType New'
    - '         @SETSTR $<worldname>.<playername>CitizenTeamID $<playername>.SMTeam'
    - '         @ADDSTR $<worldname>.<playername>CitizenTeamID 5'
    - '         @PLAYER <var:$<playername>.SMTeam> 5 new citizen selected.'
    - '     @ELSE'
    - '       @IF b $<worldname>.<var:$<playername>.SMTeam>5Dead = True'
    - '         @SETSTR $<worldname>.<playername>CitizenSelectType Dead'
    - '         @SETSTR $<worldname>.<playername>CitizenTeamID $<playername>.SMTeam'
    - '         @ADDSTR $<worldname>.<playername>CitizenTeamID 5'
    - '         @PLAYER <var:$<playername>.SMTeam> 5 respawn selected.'
    - '       @ELSE'
    - '         @SETSTR $<worldname>.<playername>CitizenSelectType Taken'
    - '         @PLAYER <var:$<playername>.SMTeam> 5 slot has already been taken.'
    - '       @ENDIF'
    - '     @ENDIF'
    - '   @CASE 6'
    - '     @SETSTR $<worldname>.<playername>CitizenSelected <var:$<playername>.SMTeam>6'
    - '     @IF b $<worldname>.<var:$<playername>.SMTeam>6Built != True'
    - '         @SETSTR $<worldname>.<playername>CitizenSelectType New'
    - '         @SETSTR $<worldname>.<playername>CitizenTeamID $<playername>.SMTeam'
    - '         @ADDSTR $<worldname>.<playername>CitizenTeamID 6'
    - '         @PLAYER <var:$<playername>.SMTeam> 6 new citizen selected.'
    - '     @ELSE'
    - '       @IF b $<worldname>.<var:$<playername>.SMTeam>6Dead = True'
    - '         @SETSTR $<worldname>.<playername>CitizenSelectType Dead'
    - '         @SETSTR $<worldname>.<playername>CitizenTeamID $<playername>.SMTeam'
    - '         @ADDSTR $<worldname>.<playername>CitizenTeamID 6'
    - '         @PLAYER <var:$<playername>.SMTeam> 6 respawn selected.'
    - '       @ELSE'
    - '         @SETSTR $<worldname>.<playername>CitizenSelectType Taken'
    - '         @PLAYER <var:$<playername>.SMTeam> 6 slot has already been taken.'
    - '       @ENDIF'
    - '     @ENDIF'
    - '   @CASE 9'
    - '@PLAYER &8LOG Start Case 1 script'
    - '     @CALL Mine:HireStick'
    - '     @CLOSEINV <playername>'
    - '   @CASE 10'
    - '     @IF i $<worldname>.<playername>BuildingLevel >= 2'
    - '       @CALL Mine:HireStone'
    - '       @SETBOOL $<worldname>.<var:$<worldname>.<playername>CitizenTeamID>Built True'
    - '       @CLOSEINV <playername>'
    - '     @ELSE'
    - '       @PLAYER You must upgrade your Mine to Level 2 before you can recruit this soldier.'
    - '     @ENDIF'
    - '   @CASE 11'
    - '     @IF i $<worldname>.<playername>BuildingLevel >= 3'
    - '       @CALL Mine:HireIron1'
    - '       @SETBOOL $<worldname>.<var:$<worldname>.<playername>CitizenTeamID>Built True'
    - '       @CLOSEINV <playername>'
    - '     @ELSE'
    - '       @PLAYER You must upgrade your Mine to Level 3 before you can recruit this soldier.'
    - '     @ENDIF'
    - '   @CASE 12'
    - '     @IF i $<worldname>.<playername>BuildingLevel >= 4'
    - '       @CALL Mine:HireIron2'
    - '       @SETBOOL $<worldname>.<var:$<worldname>.<playername>CitizenTeamID>Built True'
    - '       @CLOSEINV <playername>'
    - '     @ELSE'
    - '       @PLAYER You must upgrade your Mine to Level 4 before you can recruit this soldier.'
    - '     @ENDIF'
    - '   @CASE 13'
    - '     @IF i $<worldname>.<playername>BuildingLevel >= 5'
    - '       @CALL Mine:HireDiamond'
    - '       @SETBOOL $<worldname>.<var:$<worldname>.<playername>CitizenTeamID>Built True'
    - '       @CLOSEINV <playername>'
    - '     @ELSE'
    - '       @PLAYER You must upgrade your Mine to Level 5 before you can recruit this soldier.'
    - '     @ENDIF'
    - '   @CASE 18'
    - '     @SETSTR $<worldname>.<playername>TempVarCombine $<worldname>.<var:$<playername>.SMTeam>FletcherID'
    - '     @ADDSTR $<worldname>.<playername>TempVarCombine Level'
    - '     @IF i $<worldname>.<playername>BuildingLevel >= 2'
    - '     @AND i $<worldname>.<var:$<worldname>.<playername>TempVarCombine> >= 1'
    - '       @CALL Mine:HireBow1'
    - '       @SETBOOL $<worldname>.<var:$<worldname>.<playername>CitizenTeamID>Built True'
    - '       @CLOSEINV <playername>'
    - '     @ELSE'
    - '       @PLAYER You must upgrade your Mine 2 and Fletcher to Level 1 before you can recruit this bowman.'
    - '     @ENDIF'
    - '   @CASE 19'
    - '     @SETSTR $<worldname>.<playername>TempVarCombine $<worldname>.<var:$<playername>.SMTeam>FletcherID'
    - '     @ADDSTR $<worldname>.<playername>TempVarCombine Level'
    - '     @IF i $<worldname>.<playername>BuildingLevel >= 4'
    - '     @AND i $<worldname>.<var:$<worldname>.<playername>TempVarCombine> >= 2'
    - '       @CALL Mine:HireBow2'
    - '       @SETBOOL $<worldname>.<var:$<worldname>.<playername>CitizenTeamID>Built True'
    - '       @CLOSEINV <playername>'
    - '     @ELSE'
    - '       @PLAYER You must upgrade your Mine 4 and Fletcher to Level 2 before you can recruit this bowman.'
    - '     @ENDIF'
    - '   @CASE 20'
    - '     @SETSTR $<worldname>.<playername>TempVarCombine $<worldname>.<var:$<playername>.SMTeam>FletcherID'
    - '     @ADDSTR $<worldname>.<playername>TempVarCombine Level'
    - '     @IF i $<worldname>.<playername>BuildingLevel >= 5'
    - '     @AND i $<worldname>.<var:$<worldname>.<playername>TempVarCombine> >= 3'
    - '       @CALL Mine:HireBow3'
    - '       @SETBOOL $<worldname>.<var:$<worldname>.<playername>CitizenTeamID>Built True'
    - '       @CLOSEINV <playername>'
    - '     @ELSE'
    - '       @PLAYER You must upgrade your Mine 5 and Fletcher to Level 3 before you can recruit this bowman.'
    - '     @ENDIF'
    - '   @CASE 25'
    # Add an are you sure system.
    - '     @CALL Shared:DemolishBuilding'
    - '   @CASE 26'
    - '     @PLAYER Upgrade Selected'
    - '     @IF b $<worldname>.<var:$<playername>.SMTeam>Building = True'
    - '       @PLAYER Your team needs to complete their current building first before starting another building project.'
    - '     @ELSE'
    - '       @IF b $<worldname>.<var:$<playername>.SMTeam>ActivateCB = True'
    - '         @CMDCON title <playername> title {text:"ERROR Activate Structure First",color:red}'
    - '         @PLAYER You need to activate a structure first before moving on to building another.'
    - '         @CALL Shared:BuildComplete'
    - '       @ELSE'
    - '       @SETBOOL $<worldname>.<playername>PlanSchematicUpgradable False'
    - '       @IF i $<worldname>.<playername>BuildingLevel = 1'
    - '       @AND b $<worldname>.<var:$<playername>.SMTeam>ArtofWarIIDiscovered = True'
    - '         @SETSTR $<worldname>.<playername>PlanSchematic Mine2'
    - '         @SETBOOL $<worldname>.<playername>PlanSchematicUpgradable True'
    - '       @ENDIF'
    - '       @IF i $<worldname>.<playername>BuildingLevel = 2'
    - '       @AND b $<worldname>.<var:$<playername>.SMTeam>ArtofWarIIIDiscovered = True'
    - '         @SETSTR $<worldname>.<playername>PlanSchematic Mine3'
    - '         @SETBOOL $<worldname>.<playername>PlanSchematicUpgradable True'
    - '       @ENDIF'
    - '       @IF i $<worldname>.<playername>BuildingLevel = 3'
    - '       @AND b $<worldname>.<var:$<playername>.SMTeam>ArtofWarIVDiscovered = True'
    - '         @SETSTR $<worldname>.<playername>PlanSchematic Mine4'
    - '         @SETBOOL $<worldname>.<playername>PlanSchematicUpgradable True'
    - '       @ENDIF'
    - '       @IF i $<worldname>.<playername>BuildingLevel = 4'
    - '       @AND b $<worldname>.<var:$<playername>.SMTeam>ArtofWarVDiscovered = True'
    - '         @SETSTR $<worldname>.<playername>PlanSchematic Mine5'
    - '         @SETBOOL $<worldname>.<playername>PlanSchematicUpgradable True'
    - '       @ENDIF'
    - '       @IF b $<worldname>.<playername>PlanSchematicUpgradable = True'
    - '         @SETSTR $<worldname>.<playername>PlanSchematicID $<worldname>.<playername>BuildingID'
    # Figure out what direction the player is facing to load correct facing schematic
    - '         @SETSTR $<worldname>.<playername>PlanSchematicDirection $<worldname>.<playername>BuildingDirection'
    - '         @IF s $<worldname>.<playername>PlanSchematicDirection = North'
    # Change the origin based on North facing schematic East +X West -X North -Z South +Z .. Then Y depending on basement or not.
    - '           @SETINT $<worldname>.<playername>PlanLocChangeX 1' 
    - '           @SETINT $<worldname>.<playername>PlanLocChangeY -4'
    - '           @SETINT $<worldname>.<playername>PlanLocChangeZ 1'
    - '         @ENDIF'
    - '         @IF s $<worldname>.<playername>PlanSchematicDirection = East'
    - '           @SETINT $<worldname>.<playername>PlanLocChangeX -2' 
    - '           @SETINT $<worldname>.<playername>PlanLocChangeY -4'
    - '           @SETINT $<worldname>.<playername>PlanLocChangeZ 1'
    - '         @ENDIF'
    - '         @IF s $<worldname>.<playername>PlanSchematicDirection = South'
    - '           @SETINT $<worldname>.<playername>PlanLocChangeX -1' 
    - '           @SETINT $<worldname>.<playername>PlanLocChangeY -4'
    - '           @SETINT $<worldname>.<playername>PlanLocChangeZ -2'
    - '         @ENDIF'
    - '         @IF s $<worldname>.<playername>PlanSchematicDirection = West'
    - '           @SETINT $<worldname>.<playername>PlanLocChangeX 1' 
    - '           @SETINT $<worldname>.<playername>PlanLocChangeY -4'
    - '           @SETINT $<worldname>.<playername>PlanLocChangeZ -1'
    - '         @ENDIF'
    - '         @CALL Shared:Plan'
    - '       @ELSE'
    - '         @PLAYER This building is not upgradable yet. Discover more tech.'
    - '       @ENDIF'
    - '     @ENDIF'
    - '     @ENDIF'
    - ' @ENDSWITCH'
    - '@ENDIF'
    - '@CALL Mine:IEventSentryControl'
    Script:
    - '     @IF s $<worldname>.<playername>CitizenSelectType = New'
    - '       @CMDOP npc create <var:$<worldname>.<playername>CitizenTeamID> --type PLAYER --trait sentry'
    - '       @SETBOOL $<worldname>.<var:$<worldname>.<playername>CitizenTeamID>Built True'
    - '       @PAUSE 2'
    # Setting up sentry default attack list.
    - '       @PLAYER &8LOG Start Hire script'
    - '       @CMDCON scoreboard teams join <var:$<playername>.SMTeam> <var:$<playername>.SMTeam>'
    - '       @CMDOP sentry ignore add group:<var:$<playername>.SMTeam>'
    - '       @SETINT $<worldname>.TeamListCountTmp 0'
    - '       @LOOP @<worldname>.TeamList'
    - '         @SETSTR $<worldname>.TeamListStr @<worldname>.TeamList[<var:$<worldname>.TeamListCountTmp>]'
    - '         @IF s $<worldname>.TeamListStr != $<playername>.SMTeam'
    - '           @CMDOP sentry target add group:<var:$<worldname>.TeamListStr>'
    - '         @ENDIF'
    - '         @ADDINT $<worldname>.TeamListCountTmp 1'
    - '       @ENDLOOP'
    - '       @CMDOP npc nickname --set <var:$<playername>.SMTeam>'
#    - '@CMDOP npc constant --set Team --value <var:$<playername>.SMTeam>'
    - '       @CMDOP npc assignment --set Sentry'
    - '       @PAUSE 2'
    - '       @SETINT $<worldname>.<var:$<worldname>.<playername>CitizenTeamID>ID $<worldname>.<playername>CitizenID'
#    - '@CMDOP sentry healrate 0'
#    - '@CMDOP sentry respawn 0'
#    - '@CMDOP npc playerlist'
    - '       @CMDOP npc pushable'
    - '       @CMDOP sentry guard <playername>'
    - '     @ENDIF'
    - '     @IF s $<worldname>.<playername>CitizenSelectType = Dead'
    - '@PLAYER &8LOG $<worldname>.<var:$<worldname>.<playername>CitizenTeamID>ID'
    - '       @CMDOP npc spawn $<worldname>.<var:$<worldname>.<playername>CitizenTeamID>ID'
    - '       @SETBOOL $<worldname>.<var:$<worldname>.<playername>CitizenTeamID>Dead False'
    - '       @PAUSE 1'
    - '       @CMDCON npc select $<worldname>.<var:$<worldname>.<playername>CitizenTeamID>ID'
    - '       @PAUSE 0.2'
    - '       @CMDCON npc owner <playername>'
    - '       @CMDOP npc select $<worldname>.<var:$<worldname>.<playername>CitizenTeamID>ID'
    - '       @CMDOP npc tphere'
    - '       @CMDOP sentry guard <playername>'
    - '     @ENDIF'
  MineSetup:
    Script:
    - '@SETSTR $<playername>.MineSelection Straight'
    - '@BROADCAST &8LOG $<playername>.MineSelection'
    # After menu is set up, delete above line. Mine types selected from the menu: Straight, AngleDown, AngleUp, Shaft; save as string $<playername>.MineSelection
    - '@ADDLIST @<playername>.NonSolidIDs 0:0'
    - '@ADDLIST @<playername>.NonSolidIDs 30:0'
    - '@ADDLIST @<playername>.NonSolidIDs 39:0'
    - '@ADDLIST @<playername>.NonSolidIDs 40:0'
    - '@SETSTR $<playername>.Direction <direction:TEXT>'
    - '@ADDLIST @<playername>.ValidDirection NORTH'
    - '@ADDLIST @<playername>.ValidDirection EAST'
    - '@ADDLIST @<playername>.ValidDirection SOUTH'
    - '@ADDLIST @<playername>.ValidDirection WEST'
    - '@SETINT $<playername>.PLocX <playerloc:x>'
    - '@SETINT $<playername>.PLocY <playerloc:y>'
    - '@SETINT $<playername>.PLocZ <playerloc:z>'
    - '@SETINT $<playername>.LoopMultInt 1'
    - '@SETINT $<playername>.ListCount 0'
    - '@SETBOOL $<playername>.ListPassed false'
    - '@LOOP @<playername>.ValidDirection'
    - '   @SETSTR $<playername>.ListStr @<playername>.ValidDirection[<var:$<playername>.ListCount>]'
    - '   @IF s $<playername>.ListStr = $<playername>.Direction'
    - '      @SETBOOL $<playername>.ListPassed true'
    - '   @ENDIF'
    - '   @ADDINT $<playername>.ListCount 1'
    - '@ENDLOOP'
    - '@IF b $<playername>.ListPassed = false'
    - '   @SETSTR $<playername>.FailReason InvalidDirection'
    - '   @CALL Mine:MineFail'
    - '   @EXIT'
    - '@ENDIF'
    - '@SWITCH s $<playername>.Direction'
    - '   @CASE NORTH'
    - '      @SETINT $<playername>.FwdAdjX 0'
    - '      @SETINT $<playername>.FwdAdjZ -1'
    - '      @SETINT $<playername>.RightAdjX 1'
    - '      @SETINT $<playername>.RightAdjZ 0'
    - '      @SETINT $<playername>.LeftAdjX -1'
    - '      @SETINT $<playername>.LeftAdjZ 0'
    - '   @CASE EAST'
    - '      @SETINT $<playername>.FwdAdjX 1'
    - '      @SETINT $<playername>.FwdAdjZ 0'
    - '      @SETINT $<playername>.RightAdjX 0'
    - '      @SETINT $<playername>.RightAdjZ 1'
    - '      @SETINT $<playername>.LeftAdjX 0'
    - '      @SETINT $<playername>.LeftAdjZ -1'
    - '   @CASE SOUTH'
    - '      @SETINT $<playername>.FwdAdjX 0'
    - '      @SETINT $<playername>.FwdAdjZ 1'
    - '      @SETINT $<playername>.RightAdjX -1'
    - '      @SETINT $<playername>.RightAdjZ 0'
    - '      @SETINT $<playername>.LeftAdjX 1'
    - '      @SETINT $<playername>.LeftAdjZ 0'
    - '   @CASE WEST'
    - '      @SETINT $<playername>.FwdAdjX -1'
    - '      @SETINT $<playername>.FwdAdjZ 0'
    - '      @SETINT $<playername>.RightAdjX 0'
    - '      @SETINT $<playername>.RightAdjZ -1'
    - '      @SETINT $<playername>.LeftAdjX 0'
    - '      @SETINT $<playername>.LeftAdjZ 1'
    - '@ENDSWITCH'
    # Post check and positioning
    - '@SETBOOL $<playername>.PostBoolFL false'
    - '@SETBOOL $<playername>.PostBoolFR false'
    - '@SETBOOL $<playername>.PostBoolBL false'
    - '@SETBOOL $<playername>.PostBoolBR false'
    - '@SETINT $<playername>.LoopCount 0'
    - '@WHILE i $<playername>.LoopCount <= 16'
    - '   @IF b $<playername>.PostBoolFL = true'
    - '   @AND b $<playername>.PostBoolFR = true'
    - '      @IF b $<playername>.PostBoolBL = true'
    - '      @AND b $<playername>.PostBoolBR = true'
    - '         @SETINT $<playername>.LoopCount 17'
    - '      @ENDIF'
    - '   @ENDIF'
    - '   @ADDINT $<playername>.LoopCount 1'
    - '   @BROADCAST &8LOG Loop Count $<playername>.LoopCount'
    - '   @SETINT $<playername>.MineTMPX $<playername>.PLocX'
    - '   @SETINT $<playername>.MineTMPY $<playername>.PLocY'
    - '   @SETINT $<playername>.MineTMPZ $<playername>.PLocZ'
#    - '   @BROADCAST &8LOG Start Count 1 code line 421'
    - '   @IF i $<playername>.LoopCount = 1'
    - '      @LOOP 6'
    - '         @CALL Mine:TestBlock'
    - '         @IF s $<playername>.BlockTMP = 191:0'
    - '            @SETSTR $<playername>.FailReason PostInLOS'
    - '            @CALL Mine:MineFail'
    - '            @EXIT'
    - '         @ENDIF'
    - '         @ADDINT $<playername>.MineTMPX $<playername>.FwdAdjX'
    - '         @ADDINT $<playername>.MineTMPZ $<playername>.FwdAdjZ'
    - '      @ENDLOOP'
    - '   @ENDIF'
#    - '   @BROADCAST &8LOG Start Count 2 code line 434'
    - '   @IF i $<playername>.LoopCount = 2'
    - '      @ADDINT $<playername>.MineTMPX $<playername>.LeftAdjX'
    - '      @ADDINT $<playername>.MineTMPZ $<playername>.LeftAdjZ'
    - '      @LOOP 6'
    - '         @CALL Mine:TestBlock'
    - '         @IF s $<playername>.BlockTMP = 191:0'
    - '            @IF b $<playername>.PostBoolFL = false'
    - '               @SETINT $<playername>.PostFLX $<playername>.MineTMPX'
    - '               @SETINT $<playername>.PostFLZ $<playername>.MineTMPZ'
    - '               @SETBOOL $<playername>.PostBoolFL true'
    - '               @BROADCAST &8LOG FL post set at loop 2 code line 445'
    - '               @BREAKLOOP'
    - '            @ENDIF'
    - '         @ENDIF'
    - '         @ADDINT $<playername>.MineTMPX $<playername>.FwdAdjX'
    - '         @ADDINT $<playername>.MineTMPZ $<playername>.FwdAdjZ'
    - '      @ENDLOOP'
    - '   @ENDIF'
#    - '   @BROADCAST &8LOG Start Count 3 code line 455'
    - '   @IF i $<playername>.LoopCount = 3'
    - '      @ADDINT $<playername>.MineTMPX $<playername>.RightAdjX'
    - '      @ADDINT $<playername>.MineTMPZ $<playername>.RightAdjZ'
    - '      @LOOP 6'
    - '         @CALL Mine:TestBlock'
    - '         @IF s $<playername>.BlockTMP = 191:0'
    - '            @IF b $<playername>.PostBoolFR = false'
    - '               @SETINT $<playername>.PostFRX $<playername>.MineTMPX'
    - '               @SETINT $<playername>.PostFRZ $<playername>.MineTMPZ'
    - '               @SETBOOL $<playername>.PostBoolFR true'
    - '               @BROADCAST &8LOG FR post set at loop 3 code line 467'
    - '               @BREAKLOOP'
    - '            @ENDIF'
    - '         @ENDIF'
    - '         @ADDINT $<playername>.MineTMPX $<playername>.FwdAdjX'
    - '         @ADDINT $<playername>.MineTMPZ $<playername>.FwdAdjZ'
    - '      @ENDLOOP'
    - '   @ENDIF'
#    - '   @BROADCAST &8LOG Start Count 4 code line 476'
    - '   @IF i $<playername>.LoopCount = 4'
    - '      @SUBINT $<playername>.MineTMPX $<playername>.FwdAdjX'
    - '      @SUBINT $<playername>.MineTMPZ $<playername>.FwdAdjZ'
    - '      @LOOP 5'
    - '         @CALL Mine:TestBlock'
    - '         @IF s $<playername>.BlockTMP = 191:0'
    - '            @SETSTR $<playername>.FailReason PostInLOS'
    - '            @CALL Mine:MineFail'
    - '            @EXIT'
    - '         @ENDIF'
    - '         @SUBINT $<playername>.MineTMPX $<playername>.FwdAdjX'
    - '         @SUBINT $<playername>.MineTMPZ $<playername>.FwdAdjZ'
    - '      @ENDLOOP'
    - '   @ENDIF'
#    - '   @BROADCAST &8LOG Start Count 5 code line 491'
    - '   @IF i $<playername>.LoopCount = 5'
    - '      @ADDINT $<playername>.MineTMPX $<playername>.LeftAdjX'
    - '      @ADDINT $<playername>.MineTMPZ $<playername>.LeftAdjZ'
    - '      @SUBINT $<playername>.MineTMPX $<playername>.FwdAdjX'
    - '      @SUBINT $<playername>.MineTMPZ $<playername>.FwdAdjZ'
    - '      @LOOP 5'
    - '         @CALL Mine:TestBlock'
    - '         @IF s $<playername>.BlockTMP = 191:0'
    - '            @IF b $<playername>.PostBoolBL = false'
    - '               @SETINT $<playername>.PostBLX $<playername>.MineTMPX'
    - '               @SETINT $<playername>.PostBLZ $<playername>.MineTMPZ'
    - '               @SETBOOL $<playername>.PostBoolBL true'
    - '               @BROADCAST &8LOG BL post set at loop 5 code line 503'
    - '               @BREAKLOOP'
    - '            @ENDIF'
    - '         @ENDIF'
    - '         @SUBINT $<playername>.MineTMPX $<playername>.FwdAdjX'
    - '         @SUBINT $<playername>.MineTMPZ $<playername>.FwdAdjZ'
    - '      @ENDLOOP'
    - '   @ENDIF'
#    - '   @BROADCAST &8LOG Start Count 6 code line 509'
    - '   @IF i $<playername>.LoopCount = 6'
    - '      @ADDINT $<playername>.MineTMPX $<playername>.RightAdjX'
    - '      @ADDINT $<playername>.MineTMPZ $<playername>.RightAdjZ'
    - '      @SUBINT $<playername>.MineTMPX $<playername>.FwdAdjX'
    - '      @SUBINT $<playername>.MineTMPZ $<playername>.FwdAdjZ'
    - '      @LOOP 5'
    - '         @CALL Mine:TestBlock'
    - '         @IF s $<playername>.BlockTMP = 191:0'
    - '            @IF b $<playername>.PostBoolBR = false'
    - '               @SETINT $<playername>.PostBRX $<playername>.MineTMPX'
    - '               @SETINT $<playername>.PostBRZ $<playername>.MineTMPZ'
    - '               @SETBOOL $<playername>.PostBoolBR true'
    - '               @BROADCAST &8LOG BR post set at loop 6 code line 524'
    - '               @BREAKLOOP'
    - '            @ENDIF'
    - '         @ENDIF'
    - '         @SUBINT $<playername>.MineTMPX $<playername>.FwdAdjX'
    - '         @SUBINT $<playername>.MineTMPZ $<playername>.FwdAdjZ'
    - '      @ENDLOOP'
    - '   @ENDIF'
#    - '   @BROADCAST &8LOG Start Count 7 code line 531'
    - '   @IF i $<playername>.LoopCount >= 7'
    - '   @AND i $<playername>.LoopCount <= 11'
    - '      @ADDINT $<playername>.MineTMPX $<playername>.LeftAdjX'
    - '      @ADDINT $<playername>.MineTMPZ $<playername>.LeftAdjZ'
    - '      @ADDINT $<playername>.MineTMPX $<playername>.LeftAdjX'
    - '      @ADDINT $<playername>.MineTMPZ $<playername>.LeftAdjZ'
    - '   @ENDIF'
    - '   @IF i $<playername>.LoopCount = 7'
    - '   @OR i $<playername>.LoopCount = 8'
    - '      @ADDINT $<playername>.MineTMPX $<playername>.FwdAdjX'
    - '      @ADDINT $<playername>.MineTMPZ $<playername>.FwdAdjZ'
    - '      @IF i $<playername>.LoopCount = 7'
    - '         @ADDINT $<playername>.MineTMPX $<playername>.FwdAdjX'
    - '         @ADDINT $<playername>.MineTMPZ $<playername>.FwdAdjZ'
    - '      @ENDIF'
    - '      @LOOP 4'
    - '         @CALL Mine:TestBlock'
    - '         @IF s $<playername>.BlockTMP = 191:0'
    - '            @IF b $<playername>.PostBoolFL = false'
    - '               @SETINT $<playername>.PostFLX $<playername>.MineTMPX'
    - '               @SETINT $<playername>.PostFLZ $<playername>.MineTMPZ'
    - '               @SETBOOL $<playername>.PostBoolFL true'
    - '               @BROADCAST &8LOG FL post set at loop 7/8 code line 557'
    - '               @BREAKLOOP'
    - '            @ENDIF'
    - '         @ENDIF'
    - '         @ADDINT $<playername>.MineTMPX $<playername>.LeftAdjX'
    - '         @ADDINT $<playername>.MineTMPZ $<playername>.LeftAdjZ'
    - '      @ENDLOOP'
    - '   @ENDIF'
#    - '   @BROADCAST &8LOG Start Count 9 code line 558'
    - '   @IF i $<playername>.LoopCount = 9'
    - '      @LOOP 4'
    - '         @CALL Mine:TestBlock'
    - '         @IF s $<playername>.BlockTMP = 191:0'
    - '            @IF b $<playername>.PostBoolFL = false'
    - '               @SETINT $<playername>.PostFLX $<playername>.MineTMPX'
    - '               @SETINT $<playername>.PostFLZ $<playername>.MineTMPZ'
    - '               @SETBOOL $<playername>.PostBoolFL true'
    - '               @BROADCAST &8LOG FL post set at loop 9 code line 573'
    - '            @ELSE'
    - '               @IF b $<playername>.PostBoolBL = false'
    - '                  @SETINT $<playername>.PostBLX $<playername>.MineTMPX'
    - '                  @SETINT $<playername>.PostBLZ $<playername>.MineTMPZ'
    - '                  @SETBOOL $<playername>.PostBoolBL true'
    - '                  @BROADCAST &8LOG BL post set at loop 9 code line 578'
    - '               @ENDIF'
    - '            @ENDIF'
    - '            @BREAKLOOP'
    - '         @ENDIF'
    - '         @ADDINT $<playername>.MineTMPX $<playername>.LeftAdjX'
    - '         @ADDINT $<playername>.MineTMPZ $<playername>.LeftAdjZ'
    - '      @ENDLOOP'
    - '   @ENDIF'
#    - '   @BROADCAST &8LOG Start Count 10 code line 578'
    - '   @IF i $<playername>.LoopCount = 10'
    - '   @OR i $<playername>.LoopCount = 11'
    - '      @SUBINT $<playername>.MineTMPX $<playername>.FwdAdjX'
    - '      @SUBINT $<playername>.MineTMPZ $<playername>.FwdAdjZ'
    - '      @IF i $<playername>.LoopCount = 11'
    - '         @SUBINT $<playername>.MineTMPX $<playername>.FwdAdjX'
    - '         @SUBINT $<playername>.MineTMPZ $<playername>.FwdAdjZ'
    - '      @ENDIF'
    - '      @LOOP 4'
    - '         @CALL Mine:TestBlock'
    - '         @IF s $<playername>.BlockTMP = 191:0'
    - '            @IF b $<playername>.PostBoolBL = false'
    - '               @SETINT $<playername>.PostBLX $<playername>.MineTMPX'
    - '               @SETINT $<playername>.PostBLZ $<playername>.MineTMPZ'
    - '               @SETBOOL $<playername>.PostBoolBL true'
    - '               @BROADCAST &8LOG BL post set at loop 10 code line 601'
    - '               @BREAKLOOP'
    - '            @ENDIF'
    - '         @ENDIF'
    - '         @ADDINT $<playername>.MineTMPX $<playername>.LeftAdjX'
    - '         @ADDINT $<playername>.MineTMPZ $<playername>.LeftAdjZ'
    - '      @ENDLOOP'
    - '   @ENDIF'
#    - '   @BROADCAST &8LOG Start Count 12 code line 599'
    - '   @IF i $<playername>.LoopCount >= 12'
    - '   @AND i $<playername>.LoopCount <= 16'
    - '      @ADDINT $<playername>.MineTMPX $<playername>.RightAdjX'
    - '      @ADDINT $<playername>.MineTMPZ $<playername>.RightAdjZ'
    - '      @ADDINT $<playername>.MineTMPX $<playername>.RightAdjX'
    - '      @ADDINT $<playername>.MineTMPZ $<playername>.RightAdjZ'
    - '   @ENDIF'
    - '   @IF i $<playername>.LoopCount = 12'
    - '   @OR i $<playername>.LoopCount = 13'
    - '      @ADDINT $<playername>.MineTMPX $<playername>.FwdAdjX'
    - '      @ADDINT $<playername>.MineTMPZ $<playername>.FwdAdjZ'
    - '      @IF i $<playername>.LoopCount = 12'
    - '         @ADDINT $<playername>.MineTMPX $<playername>.FwdAdjX'
    - '         @ADDINT $<playername>.MineTMPZ $<playername>.FwdAdjZ'
    - '      @ENDIF'
    - '      @LOOP 4'
    - '         @CALL Mine:TestBlock'
    - '         @IF s $<playername>.BlockTMP = 191:0'
    - '            @IF b $<playername>.PostBoolFR = false'
    - '               @SETINT $<playername>.PostFRX $<playername>.MineTMPX'
    - '               @SETINT $<playername>.PostFRZ $<playername>.MineTMPZ'
    - '               @SETBOOL $<playername>.PostBoolFR true'
    - '               @BROADCAST &8LOG FR post set at loop 12/13 code line 630'
    - '               @BREAKLOOP'
    - '            @ENDIF'
    - '         @ENDIF'
    - '         @ADDINT $<playername>.MineTMPX $<playername>.RightAdjX'
    - '         @ADDINT $<playername>.MineTMPZ $<playername>.RightAdjZ'
    - '      @ENDLOOP'
    - '   @ENDIF'
#    - '   @BROADCAST &8LOG Start Count 14 code line 626'
    - '   @IF i $<playername>.LoopCount = 14'
    - '      @LOOP 4'
    - '         @CALL Mine:TestBlock'
    - '         @IF s $<playername>.BlockTMP = 191:0'
    - '            @IF b $<playername>.PostBoolFR = false'
    - '               @SETINT $<playername>.PostFRX $<playername>.MineTMPX'
    - '               @SETINT $<playername>.PostFRZ $<playername>.MineTMPZ'
    - '               @SETBOOL $<playername>.PostBoolFR true'
    - '               @BROADCAST &8LOG FR post set at loop 14 code line 646'
    - '            @ELSE'
    - '               @IF b $<playername>.PostBoolBR = false'
    - '                  @SETINT $<playername>.PostBRX $<playername>.MineTMPX'
    - '                  @SETINT $<playername>.PostBRZ $<playername>.MineTMPZ'
    - '                  @SETBOOL $<playername>.PostBoolBR true'
    - '                  @BROADCAST &8LOG BR post set at loop 14 code line 651'
    - '               @ENDIF'
    - '            @ENDIF'
    - '            @BREAKLOOP'
    - '         @ENDIF'
    - '         @ADDINT $<playername>.MineTMPX $<playername>.RightAdjX'
    - '         @ADDINT $<playername>.MineTMPZ $<playername>.RightAdjZ'
    - '      @ENDLOOP'
    - '   @ENDIF'
#    - '   @BROADCAST &8LOG Start Count 15 code line 646'
    - '   @IF i $<playername>.LoopCount = 15'
    - '   @OR i $<playername>.LoopCount = 16'
    - '      @SUBINT $<playername>.MineTMPX $<playername>.FwdAdjX'
    - '      @SUBINT $<playername>.MineTMPZ $<playername>.FwdAdjZ'
    - '      @IF i $<playername>.LoopCount = 16'
    - '         @SUBINT $<playername>.MineTMPX $<playername>.FwdAdjX'
    - '         @SUBINT $<playername>.MineTMPZ $<playername>.FwdAdjZ'
    - '      @ENDIF'
    - '      @LOOP 4'
    - '         @CALL Mine:TestBlock'
    - '         @IF s $<playername>.BlockTMP = 191:0'
    - '            @IF b $<playername>.PostBoolBR = false'
    - '               @SETINT $<playername>.PostBRX $<playername>.MineTMPX'
    - '               @SETINT $<playername>.PostBRZ $<playername>.MineTMPZ'
    - '               @SETBOOL $<playername>.PostBoolBR true'
    - '               @BROADCAST &8LOG BR post set at loop 15 code line 674'
    - '               @BREAKLOOP'
    - '            @ENDIF'
    - '         @ENDIF'
    - '         @ADDINT $<playername>.MineTMPX $<playername>.RightAdjX'
    - '         @ADDINT $<playername>.MineTMPZ $<playername>.RightAdjZ'
    - '      @ENDLOOP'
    - '   @ENDIF'
    - '@ENDWHILE'
    - '@BROADCAST &8LOG Before switch'
    - '@SWITCH s $<playername>.Direction'
    - '   @CASE NORTH'
    - '      @SETINT $<playername>.LRDist $<playername>.PostFRX'
    - '      @SUBINT $<playername>.LRDist $<playername>.PostFLX'
    - '      @SETINT $<playername>.FBDist $<playername>.PostBLZ'
    - '      @SUBINT $<playername>.FBDist $<playername>.PostFLZ'
    - '   @CASE EAST'
    - '      @SETINT $<playername>.LRDist $<playername>.PostFRZ'
    - '      @SUBINT $<playername>.LRDist $<playername>.PostFLZ'
    - '      @SETINT $<playername>.FBDist $<playername>.PostFLX'
    - '      @SUBINT $<playername>.FBDist $<playername>.PostBLX'
    - '   @CASE SOUTH'
    - '      @SETINT $<playername>.LRDist $<playername>.PostFLX'
    - '      @SUBINT $<playername>.LRDist $<playername>.PostFRX'
    - '      @SETINT $<playername>.FBDist $<playername>.PostFLZ'
    - '      @SUBINT $<playername>.FBDist $<playername>.PostBLZ'
    - '   @CASE WEST'
    - '      @SETINT $<playername>.LRDist $<playername>.PostFLZ'
    - '      @SUBINT $<playername>.LRDist $<playername>.PostFRZ'
    - '      @SETINT $<playername>.FBDist $<playername>.PostBLX'
    - '      @SUBINT $<playername>.FBDist $<playername>.PostFLX'
    - '@ENDSWITCH'
    - '@BROADCAST &8LOG PostFLX $<playername>.PostFLX'
    - '@BROADCAST &8LOG PostFRX $<playername>.PostFRX'
    - '@BROADCAST &8LOG PostFLZ $<playername>.PostFLZ'
    - '@BROADCAST &8LOG PostFRZ $<playername>.PostFRZ'
    - '@BROADCAST &8LOG PostBLX $<playername>.PostBLX'
    - '@BROADCAST &8LOG PostBRX $<playername>.PostBRX'
    - '@BROADCAST &8LOG PostBLZ $<playername>.PostBLZ'
    - '@BROADCAST &8LOG PostBRZ $<playername>.PostBRZ'
    - '@BROADCAST &8LOG LR Dist $<playername>.LRDist'
    - '@BROADCAST &8LOG FB Dist $<playername>.FBDist'
    - '@IF i $<playername>.LRDist = 5'
    - '@AND i $<playername>.FBDist = 2'
    - '   @BROADCAST &8LOG Entered LRDist5, FBDist 2'
    - '   @SETINT $<playername>.MineTMPX $<playername>.PostFLX'
    - '   @SETINT $<playername>.MineTMPZ $<playername>.PostFLZ'
    - '   @ADDINT $<playername>.MineTMPX $<playername>.RightAdjX'
    - '   @ADDINT $<playername>.MineTMPZ $<playername>.RightAdjZ'
    - '   @ADDINT $<playername>.MineTMPX $<playername>.RightAdjX'
    - '   @ADDINT $<playername>.MineTMPZ $<playername>.RightAdjZ'
    - '   @SUBINT $<playername>.MineTMPX $<playername>.FwdAdjX'
    - '   @SUBINT $<playername>.MineTMPZ $<playername>.FwdAdjZ'
    - '   @CALL Mine:MineBlock'
    - '   @SETSTR $<playername>.BlockName minecraft:lever'
    - '   @CALL Mine:PlaceBlock'
    - '   @ADDINT $<playername>.MineTMPX $<playername>.RightAdjX'
    - '   @ADDINT $<playername>.MineTMPZ $<playername>.RightAdjZ'
    - '   @SUBINT $<playername>.MineTMPX $<playername>.FwdAdjX'
    - '   @SUBINT $<playername>.MineTMPZ $<playername>.FwdAdjZ'
    - '   @SETSTR $<playername>.BlockName minecraft:rail'
    - '   @CALL Mine:PlaceBlock'
    - '   @ADDINT $<playername>.MineTMPX $<playername>.LeftAdjX'
    - '   @ADDINT $<playername>.MineTMPZ $<playername>.LeftAdjZ'
    - '   @SETSTR $<playername>.BlockName minecraft:rail'
    - '   @CALL Mine:PlaceBlock'
    - '   @ADDINT $<playername>.MineTMPX $<playername>.LeftAdjX'
    - '   @ADDINT $<playername>.MineTMPZ $<playername>.LeftAdjZ'
    - '   @SETSTR $<playername>.BlockName minecraft:rail'
    - '   @CALL Mine:PlaceBlock'
    - '   @ADDINT $<playername>.MineTMPX $<playername>.FwdAdjX'
    - '   @ADDINT $<playername>.MineTMPZ $<playername>.FwdAdjZ'
    - '   @ADDINT $<playername>.MineTMPX $<playername>.FwdAdjX'
    - '   @ADDINT $<playername>.MineTMPZ $<playername>.FwdAdjZ'
    - '   @CALL Mine:3x3Loop'
    - '   @EXIT'
    - '@ENDIF'
#    - '@IF i $<playername>.LRDist = 2'
#    - '@AND i $<playername>.FBDist = 2'
# TBD
#    - '@ENDIF'
    - '@IF i $<playername>.LRDist = 2'
    - '   @BROADCAST &8LOG Entered LRDist2'
    - '   @IF b $<playername>.PostBoolFL = true'
    - '   @AND b $<playername>.PostBoolFR = true'
    - '      @BROADCAST &8LOG Entered PostBoolFL and FR test'
    - '      @SETINT $<playername>.MineTMPX $<playername>.PostFLX'
    - '      @SETINT $<playername>.MineTMPZ $<playername>.PostFLZ'
    - '      @ADDINT $<playername>.MineTMPX $<playername>.RightAdjX'
    - '      @ADDINT $<playername>.MineTMPZ $<playername>.RightAdjZ'
    - '   @ENDIF'
    - '   @IF b $<playername>.PostBoolFL = false'
    - '   @AND b $<playername>.PostBoolFR = false'
    - '      @IF b $<playername>.PostBoolBL = true'
    - '      @AND b $<playername>.PostBoolBR = true'
    - '         @BROADCAST &8LOG Entered PostBoolBL and BR test'
    - '         @SETINT $<playername>.MineTMPX $<playername>.PostBLX'
    - '         @SETINT $<playername>.MineTMPZ $<playername>.PostBLZ'
    - '         @ADDINT $<playername>.MineTMPX $<playername>.RightAdjX'
    - '         @ADDINT $<playername>.MineTMPZ $<playername>.RightAdjZ'
    - '      @ENDIF'
    - '   @ENDIF'
    - '   @BROADCAST &8LOG Before Calling Loop'
    - '   @CALL Mine:3x3Loop'
    - '   @EXIT'
    - '@ENDIF'
    - '@CMDCON title <playername> title {text:"Irregular Mine Pattern",color:red}'
    - '@PLAYER Your miner does not recognize this as a standard mine pattern. He will mine straight ahead!'
    - '@CMDCON title <playername> subtitle {text:"Your miner does not recognize this as a standard mine pattern. He will mine straight ahead!",color:yellow}'
    - '@SETINT $<playername>.MineTMPX $<playername>.PLocX'
    - '@SETINT $<playername>.MineTMPZ $<playername>.PLocZ'
  3x3Loop:
    Script:
#    - '@IF s $<playername>.MineSelection = Shaft'
#    - '   @CALL Mine:Shaft'
#    - '   @EXIT'
#    - '@ENDIF'
    - '@BROADCAST &8LOG Entered Loop Setup'
    - '@SETSTR $<playername>.AngleDone false'
    - '@SETINT $<playername>.AirCount 0'
    - '@IF s $<playername>.MineSelection = Straight'
    - '   @BROADCAST &8LOG Entered Straight Test'
    - '   @SETINT $<playername>.LoopAmt 5'
    - '   @SETSTR $<playername>.AngleDone = true'
    - '   @SETSTR $<playername>.BlockName minecraft:rail'
    - '   @CALL Mine:PlaceBlock'
    - '@ENDIF'
    - '@IF s $<playername>.MineSelection = AngleUp'
    - '@OR s $<playername>.MineSelection = AngleDown'
    - '   @BROADCAST &8LOG Entered Angle Test'
    - '   @IF s $<playername>.AngleDone = false'
    - '      @SETINT $<playername>.LoopAmt 5'
    - '      @SETINT $<playername>.LoopCount 0'
    - '   @ENDIF'
    - '@ENDIF'
    - '@BROADCAST &8LOG Before Loop'
    - '@LOOP $<playername>.LoopAmt'
    - '   @BROADCAST &8LOG Entered Loop'
    - '   @IF s $<playername>.MineSelection = AngleUp'
    - '   @AND s $<playername>.AngleDone = false'
    - '      @ADDINT $<playername>.MineTMPY 1'
    - '   @ENDIF'
    - '   @IF s $<playername>.MineSelection = AngleDown'
    - '   @AND s $<playername>.AngleDone = false'
    - '      @IF i $<playername>.LoopCount = 0'
    - '         @CALL Mine:MineBlock'
    - '      @ENDIF'
    - '      @IF i $<playername>.LoopCount < 5'
    - '         @SUBINT $<playername>.MineTMPY 1'
    - '         @CALL Mine:MineBlock'
    - '      @ENDIF'
    - '      @SUBINT $<playername>.MineTMPY 1'   
    - '      @CALL Mine:FloorCheck'
    - '      @ADDINT $<playername>.MineTMPY 1'  
    - '      @SETSTR $<playername>.BlockName minecraft:rail'
    - '      @CALL Mine:PlaceBlock'
    - '      @ADDINT $<playername>.LoopCount 1'
    - '   @ENDIF'
    - '   @ADDINT $<playername>.MineTMPY 1'
    - '   @ADDINT $<playername>.MineTMPX $<playername>.FwdAdjX'
    - '   @ADDINT $<playername>.MineTMPZ $<playername>.FwdAdjZ'
#    - '   @BROADCAST &8LOG Starting 3x3 Loop at <var:$<playername>.MineTMPX> <var:$<playername>.MineTMPY> <var:$<playername>.MineTMPZ>'
    - '   @CALL Mine:MineBlock'
    - '   @SUBINT $<playername>.MineTMPY 1'
    - '   @CALL Mine:MineBlock'
    - '   @ADDINT $<playername>.MineTMPY 1'
    - '   @ADDINT $<playername>.MineTMPX $<playername>.RightAdjX'
    - '   @ADDINT $<playername>.MineTMPZ $<playername>.RightAdjZ'
    - '   @CALL Mine:MineBlock'
    - '   @SUBINT $<playername>.MineTMPY 1'
    - '   @CALL Mine:MineBlock'
    - '   @ADDINT $<playername>.MineTMPY 1'
    - '   @ADDINT $<playername>.MineTMPX $<playername>.LeftAdjX'
    - '   @ADDINT $<playername>.MineTMPZ $<playername>.LeftAdjZ'
    - '   @ADDINT $<playername>.MineTMPX $<playername>.LeftAdjX'
    - '   @ADDINT $<playername>.MineTMPZ $<playername>.LeftAdjZ'
    - '   @CALL Mine:MineBlock'
    - '   @SUBINT $<playername>.MineTMPY 1'
    - '   @CALL Mine:MineBlock'
    - '   @ADDINT $<playername>.MineTMPY 2'
    - '   @CALL Mine:MineBlock'
    - '   @ADDINT $<playername>.MineTMPX $<playername>.RightAdjX'
    - '   @ADDINT $<playername>.MineTMPZ $<playername>.RightAdjZ'
    - '   @CALL Mine:MineBlock'
    - '   @ADDINT $<playername>.MineTMPX $<playername>.RightAdjX'
    - '   @ADDINT $<playername>.MineTMPZ $<playername>.RightAdjZ'
    - '   @CALL Mine:MineBlock'
    - '   @SUBINT $<playername>.MineTMPY 2'
    - '   @ADDINT $<playername>.MineTMPX $<playername>.LeftAdjX'
    - '   @ADDINT $<playername>.MineTMPZ $<playername>.LeftAdjZ'
    - '   @ADDINT $<playername>.MineTMPX $<playername>.LeftAdjX'
    - '   @ADDINT $<playername>.MineTMPZ $<playername>.LeftAdjZ'
    - '   @SETINT $<playername>.MineResetX $<playername>.MineTMPX'
    - '   @SETINT $<playername>.MineResetZ $<playername>.MineTMPZ'
    # Inside loop, check for falling blocks at floor level
#    - '   @BROADCAST &8LOG Starting Falling Block Check'
    - '   @SETINT $<playername>.ResetCount 1'
    - '   @WHILE i $<playername>.AirCount < 3'
    - '      @PAUSE 0.5'
    - '      @CALL Mine:MineBlock'
    - '      @IF i $<playername>.ResetCount < 3'
    - '         @ADDINT $<playername>.MineTMPX $<playername>.RightAdjX'
    - '         @ADDINT $<playername>.MineTMPZ $<playername>.RightAdjZ'
    - '         @ADDINT $<playername>.ResetCount 1'
    - '      @ELSE'
    - '         @ADDINT $<playername>.MineTMPX $<playername>.LeftAdjX'
    - '         @ADDINT $<playername>.MineTMPZ $<playername>.LeftAdjZ'
    - '         @ADDINT $<playername>.MineTMPX $<playername>.LeftAdjX'
    - '         @ADDINT $<playername>.MineTMPZ $<playername>.LeftAdjZ'
    - '         @SETINT $<playername>.ResetCount 1'
    - '      @ENDIF'
    - '   @ENDWHILE'
    # Inside loop, check if loop has returned all air
    - '   @IF i $<playername>.AirCount >= 9'
    - '      @SETSTR $<playername>.FailReason Cavern'
    - '      @CALL Mine:MineFail'
    - '      @EXIT'
    - '   @ENDIF'
    # Inside loop, check for air below floor level
#    - '   @BROADCAST &8LOG Starting Solid Floor Check'
    - '   @SETINT $<playername>.MineTMPX $<playername>.MineResetX'
    - '   @SETINT $<playername>.MineTMPZ $<playername>.MineResetZ'
    - '   @ADDINT $<playername>.MineTMPX $<playername>.LeftAdjX'
    - '   @ADDINT $<playername>.MineTMPZ $<playername>.LeftAdjZ'
    - '   @SUBINT $<playername>.MineTMPY 1'
    - '   @SETINT $<playername>.FloorCount 0'
    - '   @LOOP 3'
    - '      @ADDINT $<playername>.MineTMPX $<playername>.RightAdjX'
    - '      @ADDINT $<playername>.MineTMPZ $<playername>.RightAdjZ'
    - '      @ADDINT $<playername>.FloorCount 1'
    - '      @IF i $<playername>.FloorCount = 2'
    - '         @IF s $<playername>.MineSelection = AngleUp'
    - '         @AND s $<playername>.AngleDone = false'
    - '            @CALL Mine:MineBlock'
    - '            @SUBINT $<playername>.MineTMPY 1'
    - '            @CALL Mine:FloorCheck'
    - '            @ADDINT $<playername>.MineTMPY 1'
    - '            @SETSTR $<playername>.BlockName minecraft:rail'
    - '            @CALL Mine:PlaceBlock'
    - '            @ADDINT $<playername>.LoopCount 1'
    - '         @ENDIF'
    - '      @ENDIF'
    - '      @CALL Mine:FloorCheck'
    - '   @ENDLOOP'
    # Inside loop, place rail
    - '   @ADDINT $<playername>.MineTMPY 1'
    - '   @ADDINT $<playername>.MineTMPX $<playername>.LeftAdjX'
    - '   @ADDINT $<playername>.MineTMPZ $<playername>.LeftAdjZ'
    - '   @SETSTR $<playername>.BlockName minecraft:rail'
    - '   @IF s $<playername>.MineSelection = Straight'
    - '      @CALL Mine:PlaceBlock'
    - '   @ENDIF'
    - '   @IF s $<playername>.MineSelection = AngleUp'
    - '   @AND i $<playername>.LoopCount > $<playername>.LoopAmt'
    - '      @CALL Mine:PlaceBlock'
    - '   @ENDIF'
    - '   @IF s $<playername>.MineSelection = AngleDown'
    - '   @AND i $<playername>.LoopCount >= $<playername>.LoopAmt'
    - '      @CALL Mine:PlaceBlock'
    - '   @ENDIF'
    - '@ENDLOOP'
    - '@CALL Mine:Supports'
    # Reloop
    - '@IF s $<playername>.AngleDone = false'
    - '   @IF s $<playername>.MineSelection = AngleUp'
    - '   @OR s $<playername>.MineSelection = AngleDown'
    - '      @SETINT $<playername>.LoopAmt 2'
    - '      @SUBINT $<playername>.MineTMPY 2'
    - '      @SETSTR $<playername>.AngleDone = true'
    - '      @CALL Mine:3x3Loop'
    - '   @ENDIF'
    - '@ENDIF'
    # Mine finished
    - '@SUBINT $<playername>.MineTMPY 2'
    - '@CALL Mine:MineBlock'
    - '@SETSTR $<playername>.FailReason Success'
    - '@CALL Mine:MineFail'
  Supports:
    Script:
    - '@SETINT $<playername>.MineTMPX $<playername>.MineResetX'
    - '@SETINT $<playername>.MineTMPZ $<playername>.MineResetZ'
    - '@SETSTR $<playername>.BlockName minecraft:dark_oak_fence'   
    - '@CALL Mine:PlaceBlock'
    - '@ADDINT $<playername>.MineTMPY 1'
    - '@CALL Mine:PlaceBlock'
    - '@SUBINT $<playername>.MineTMPY 1'
    - '@ADDINT $<playername>.MineTMPX $<playername>.RightAdjX'
    - '@ADDINT $<playername>.MineTMPZ $<playername>.RightAdjZ'
    - '@ADDINT $<playername>.MineTMPX $<playername>.RightAdjX'
    - '@ADDINT $<playername>.MineTMPZ $<playername>.RightAdjZ'
    - '@CALL Mine:PlaceBlock'
    - '@ADDINT $<playername>.MineTMPY 1'
    - '@CALL Mine:PlaceBlock'
    - '@ADDINT $<playername>.MineTMPY 1'
    - '@SETSTR $<playername>.BlockName minecraft:planks'
    - '@CALL Mine:PlaceBlock'
    - '@ADDINT $<playername>.MineTMPX $<playername>.LeftAdjX'
    - '@ADDINT $<playername>.MineTMPZ $<playername>.LeftAdjZ'
    - '@CALL Mine:PlaceBlock'
    - '@ADDINT $<playername>.MineTMPX $<playername>.LeftAdjX'
    - '@ADDINT $<playername>.MineTMPZ $<playername>.LeftAdjZ'
    - '@CALL Mine:PlaceBlock'
    - '@ADDINT $<playername>.MineTMPX $<playername>.RightAdjX'
    - '@ADDINT $<playername>.MineTMPZ $<playername>.RightAdjZ'
    - '@SUBINT $<playername>.MineTMPX $<playername>.FwdAdjX'
    - '@SUBINT $<playername>.MineTMPZ $<playername>.FwdAdjZ'
    - '@SETSTR $<playername>.BlockName minecraft:torch'
    - '@CALL Mine:PlaceBlock'
    - '@ADDINT $<playername>.MineTMPX $<playername>.FwdAdjX'
    - '@ADDINT $<playername>.MineTMPZ $<playername>.FwdAdjZ'
  TestBlock:
    Script:
    - '@SETSTR $<playername>.MineTMPLocation <var:$<playername>.MineTMPX>,'
    - '@ADDSTR $<playername>.MineTMPLocation <var:$<playername>.MineTMPY>,'
    - '@ADDSTR $<playername>.MineTMPLocation $<playername>.MineTMPZ'
    - '@GETBLOCK $<playername>.BlockTMP $<playername>.MineTMPLocation'
  MineBlock:
    Script:
#    - '@BROADCAST &8LOG Entered MineBlock'
    - '@SETSTR $<playername>.MineTMPLocation <var:$<playername>.MineTMPX>,'
    - '@ADDSTR $<playername>.MineTMPLocation <var:$<playername>.MineTMPY>,'
    - '@ADDSTR $<playername>.MineTMPLocation $<playername>.MineTMPZ'
    - '@GETBLOCK $<playername>.BlockTMP $<playername>.MineTMPLocation'
    - '@IF s $<playername>.BlockTMP = 0:0'
    - '   @ADDINT $<playername>.AirCount 1'
    - '@ELSE'
    - '   @SETINT $<playername>.AirCount 0'
    - '   @IF s $<playername>.BlockTMP = 66:0'
    - '   @OR s $<playername>.BlockTMP = 66:1'
    #     add 1 rail back to inventory
    - '   @ENDIF'
    - '   @CMDOP setblock $<playername>.MineTMPX $<playername>.MineTMPY $<playername>.MineTMPZ minecraft:air 0 replace'
    # miner should run this line eventually to prevent spamming
    - '   @LOOP $<playername>.LoopMultInt'
    - '      @PAUSE 1'
    - '   @ENDLOOP'
    - '@ENDIF'
  FloorCheck:
    Script:
    - '@SETSTR $<playername>.MineTMPLocation <var:$<playername>.MineTMPX>,'
    - '@ADDSTR $<playername>.MineTMPLocation <var:$<playername>.MineTMPY>,'
    - '@ADDSTR $<playername>.MineTMPLocation $<playername>.MineTMPZ'
    - '@GETBLOCK $<playername>.BlockTMP $<playername>.MineTMPLocation'
    - '@SETINT $<playername>.ListCount 0'
    - '@LOOP @<playername>.NonSolidIDs'
    - '   @SETSTR $<playername>.ListStr @<playername>.NonSolidIDs[<var:$<playername>.ListCount>]'
    - '   @IF s $<playername>.ListStr = $<playername>.BlockTMP'
    - '      @CALL Mine:MineBlock'
    - '      @SETSTR $<playername>.BlockName minecraft:wooden_slab'
    - '      @CALL Mine:PlaceBlock'
    - '      @BREAKLOOP'
    - '   @ENDIF'
    - '   @ADDINT $<playername>.ListCount 1'
    - '@ENDLOOP'
  PlaceBlock:
    Script:
    - '@BROADCAST &8LOG Entered PlaceBlock'
    - '@SETBOOL $<playername>.InvCheck false'
    - '@SETINT $<playername>.BlockData 0'
    - '@BROADCAST &8LOG $<playername>.BlockData'
    # likely will need extensive if statements for the 10 possible rail block datas; here or when it is called
    - '@IF s $<playername>.BlockName = minecraft:rail'
    - '   @BROADCAST &8LOG Inside Rail'
    # check inventory for rail
    #- '   @IF i [inventory rail.var] > 0'
    - '      @SETBOOL $<playername>.InvCheck true'
    # remove 1 rail from inventory
    #- '   @ELSE'
    # display a notice that you are out of this material, but mining will continue
    #- '   @ENDIF'
    - '@ENDIF'
    - '@BROADCAST &8LOG At lever'
    - '@IF s $<playername>.BlockName = minecraft:lever'
    - '   @BROADCAST &8LOG Inside Lever'
    # check inventory for levers
    #- '   @IF i [inventory lever.var] > 0'
    - '      @SETBOOL $<playername>.InvCheck true'
    - '      @SWITCH s $<playername>.Direction'
#    - '         @CASE NORTH'
#    - '            @SETINT $<playername>.BlockData 5'
#    - '         @CASE EAST'
#    - '            @SETINT $<playername>.BlockData 6'
#    - '         @CASE SOUTH'
#    - '            @SETINT $<playername>.BlockData 5'
    - '         @CASE WEST'
    - '            @SETSTR $<playername>.BlockData 6'
    - '      @ENDSWITCH'
    # remove 1 lever from inventory
    #- '   @ELSE'
    # display a notice that you are out of this material, but mining will continue
    #- '   @ENDIF'
    - '@ENDIF'
    - '@BROADCAST &8LOG At slab'
    - '@IF s $<playername>.BlockName = minecraft:wooden_slab'
    # check inventory for wooden slab
    #- '   @IF i [inventory woodslab.var] > 0'
    - '      @SETBOOL $<playername>.InvCheck true'
    - '      @SETINT $<playername>.BlockData 13'
    # remove 1 wooden slab from inventory
    #- '   @ELSE'
    #- '      @SETSTR $<playername>.FailReason NoWoodSlab'
    #- '      @CALL Mine:MineFail'
    #- '      @EXIT'
    #- '   @ENDIF'
    - '@ENDIF'
    - '@BROADCAST &8LOG At oak fence'
    - '@IF s $<playername>.BlockName = minecraft:dark_oak_fence'
    # check inventory for fence
    #- '   @IF i [inventory fence.var] > 0'
    - '      @SETBOOL $<playername>.InvCheck true'
    # remove 1 fence from inventory
    #- '   @ELSE'
    #- '      @SETSTR $<playername>.FailReason NoFence'
    #- '      @CALL Mine:MineFail'
    #- '      @EXIT'
    #- '   @ENDIF'
    - '@ENDIF'
    - '@BROADCAST &8LOG At planks'
    - '@IF s $<playername>.BlockName = minecraft:planks'
    # check inventory for wooden planks
    #- '   @IF i [inventory planks.var] > 0'
    - '      @SETBOOL $<playername>.InvCheck true'
    - '      @SETINT $<playername>.BlockData 5'
    # remove 1 plank from inventory
    #- '   @ELSE'
    #- '      @SETSTR $<playername>.FailReason NoPlanks'
    #- '      @CALL Mine:MineFail'
    #- '      @EXIT'
    #- '   @ENDIF'
    - '@ENDIF'
    - '@BROADCAST &8LOG At torch'
    - '@BROADCAST &8LOG $<playername>.BlockData'
    - '@IF s $<playername>.BlockName = minecraft:torch'
    # check inventory for a torch
    #- '   @IF i [inventory torch.var] > 0'
    - '      @SETBOOL $<playername>.InvCheck true'
    - '      @SWITCH s $<playername>.Direction'
    - '         @CASE NORTH'
    - '            @SETINT $<playername>.BlockData 3'
    - '         @CASE EAST'
    - '            @SETINT $<playername>.BlockData 2'
    - '         @CASE SOUTH'
    - '            @SETINT $<playername>.BlockData 4'
    - '         @CASE WEST'
    - '            @SETINT $<playername>.BlockData 1'
    - '      @ENDSWITCH'
    # remove 1 torch from inventory
    #- '   @ELSE'
    #- '      @SETSTR $<playername>.FailReason NoTorch'
    #- '      @CALL Mine:MineFail'
    #- '      @EXIT'
    #- '   @ENDIF'
    - '@ENDIF'
    - '@BROADCAST &8LOG At InvCheck'
    - '@IF b $<playername>.InvCheck = true'
    - '   @CMDOP setblock $<playername>.MineTMPX $<playername>.MineTMPY $<playername>.MineTMPZ $<playername>.BlockName $<playername>.BlockData'
    - '   @LOOP $<playername>.LoopMultInt'
    - '      @PAUSE 1'
    - '   @ENDLOOP'
    - '@ENDIF'
  MineFail:
    Script:
    - '@IF s $<playername>.FailReason = Success'
    - '   @CMDCON title <playername> title {text:"Mining Completed",color:red}'
    - '   @PLAYER Your miner has completeled all mine tunnel segments in queue'
    - '   @CMDCON title <playername> subtitle {text:"Your miner has completeled all mine tunnel segments in queue",color:yellow}'
    - '@ENDIF'    
    - '@IF s $<playername>.FailReason = InvalidDirection'
    - '   @CMDCON title <playername> title {text:"Mining Failed",color:red}'
    - '   @PLAYER A mine tunnel cannot be built on a horizontal angle'
    - '   @CMDCON title <playername> subtitle {text:"A mine tunnel cannot be built on a horizontal angle",color:yellow}'
    - '@ENDIF'
    - '@IF s $<playername>.FailReason = PostInLOS'
    - '   @CMDCON title <playername> title {text:"Mining Failed",color:red}'
    - '   @PLAYER A new mine segment must be started between two valid fence posts'
    - '   @CMDCON title <playername> subtitle {text:"A new mine segment must be started between two valid fence posts",color:yellow}'
    - '@ENDIF'
    - '@IF s $<playername>.FailReason = InvalidLoc'
    - '   @CMDCON title <playername> title {text:"Mining Failed",color:red}'
    - '   @PLAYER A mine segment cannot be started at this location'
    - '   @CMDCON title <playername> subtitle {text:"A mine segment cannot be started at this location",color:yellow}'
    - '@ENDIF'
    - '@IF s $<playername>.FailReason = NoWoodSlab'
    - '   @CMDCON title <playername> title {text:"Mining Stopped",color:red}'
    - '   @PLAYER Mining stopped...You must deposit Wooden Slabs into your Mine Hub inventory'
    - '   @CMDCON title <playername> subtitle {text:"Mining stopped...You must deposit Wooden Slabs into your Mine Hub inventory",color:yellow}'
    - '@ENDIF'
    - '@IF s $<playername>.FailReason = NoFence'
    - '   @CMDCON title <playername> title {text:"Mining Stopped",color:red}'
    - '   @PLAYER Mining stopped...You must deposit Wooden Fences into your Mine Hub inventory'
    - '   @CMDCON title <playername> subtitle {text:"You must deposit Wooden Fences into your Mine Hub inventory",color:yellow}'
    - '@ENDIF'
    - '@IF s $<playername>.FailReason = NoPlanks'
    - '   @CMDCON title <playername> title {text:"Mining Stopped",color:red}'
    - '   @PLAYER Mining stopped...You must deposit Wooden Planks into your Mine Hub inventory'
    - '   @CMDCON title <playername> subtitle {text:"You must deposit Wooden Planks into your Mine Hub inventory",color:yellow}'
    - '@ENDIF'
    - '@IF s $<playername>.FailReason = NoTorch'
    - '   @CMDCON title <playername> title {text:"Mining Stopped",color:red}'
    - '   @PLAYER Mining stopped...You must deposit Torches into your Mine Hub inventory'
    - '   @CMDCON title <playername> subtitle {text:"You must deposit Torches into your Mine Hub inventory",color:yellow}'
    - '@ENDIF'
    - '@IF s $<playername>.FailReason = Cavern'
    - '   @CMDCON title <playername> title {text:"Mining Stopped",color:red}'
    - '   @PLAYER Mining stopped...Your miners have found an open cavern!'
    - '   @CMDCON title <playername> subtitle {text:"Mining stopped...Your miners have found an open cavern!",color:yellow}'
    - '@ENDIF'
    - '@DELVAR s $<playername>.Direction'
    - '@DELVAR i $<playername>.PLocX'
    - '@DELVAR i $<playername>.PLocY'
    - '@DELVAR i $<playername>.PLocZ'
    - '@DELVAR i $<playername>.LoopMultInt'
    - '@DELVAR s $<playername>.FailReason'
    - '@DELLIST @<playername>.ValidDirection'
    - '@DELLIST @<playername>.NonSolidIDs'
    - '@DELVAR i $<playername>.ListCount'
    - '@DELVAR s $<playername>.ListStr'
    - '@DELVAR b $<playername>.ListPassed'
    - '@DELVAR i $<playername>.FwdAdjX'
    - '@DELVAR i $<playername>.FwdAdjZ'
    - '@DELVAR i $<playername>.RightAdjX'
    - '@DELVAR i $<playername>.RightAdjZ'
    - '@DELVAR i $<playername>.LeftAdjX'
    - '@DELVAR i $<playername>.LeftAdjZ'
    - '@DELVAR i $<playername>.MineTMPX'
    - '@DELVAR i $<playername>.MineTMPY'
    - '@DELVAR i $<playername>.MineTMPZ'
    - '@DELVAR s $<playername>.MineTMPLocation'
    - '@DELVAR i $<playername>.MineResetX'
    - '@DELVAR i $<playername>.MineResetZ'
    - '@DELVAR i $<playername>.ResetCount'
    - '@DELVAR i $<playername>.AirCount'
    - '@DELVAR s $<playername>.MineSelection'
    - '@DELVAR i $<playername>.LoopAmt'
    - '@DELVAR i $<playername>.LoopCount'
    - '@DELVAR s $<playername>.BlockName'
    - '@DELVAR s $<playername>.BlockTMP'
    - '@DELVAR i $<playername>.BlockData'
    - '@DELVAR b $<playername>.InvCheck'
    - '@DELVAR s $<playername>.AngleDone'
    - '@DELVAR i $<playername>.FloorCount'
    - '@DELVAR b $<playername>.PostBoolFL'
    - '@DELVAR b $<playername>.PostBoolFR'
    - '@DELVAR b $<playername>.PostBoolBL'
    - '@DELVAR b $<playername>.PostBoolBR'
    - '@DELVAR i $<playername>.PostFLX'
    - '@DELVAR i $<playername>.PostFLZ'
    - '@DELVAR i $<playername>.PostFRX'
    - '@DELVAR i $<playername>.PostFRZ'
    - '@DELVAR i $<playername>.PostBLX'
    - '@DELVAR i $<playername>.PostBLZ'
    - '@DELVAR i $<playername>.PostBRX'
    - '@DELVAR i $<playername>.PostBRZ'
    - '@DELVAR i $<playername>.LRDist'
    - '@DELVAR i $<playername>.FBDist'